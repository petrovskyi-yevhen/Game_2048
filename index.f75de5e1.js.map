{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst button = document.querySelector('button');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst gameScore = document.querySelector('.game-score');\nconst fieldRows = document.querySelectorAll('.field-row');\nconst size = 4;\nlet score = 0;\nlet isWin = false;\nlet newBoard;\nlet board = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nbutton.addEventListener('click', e => {\n  document.addEventListener('keydown', move);\n\n  if (button.classList.contains('start')) {\n    button.classList.replace('start', 'restart');\n    button.innerText = 'Restart';\n    messageStart.classList.add('hidden');\n  } else {\n    isWin = false;\n    restartGame();\n  }\n\n  addNumber();\n  addNumber();\n  render();\n});\n\nfunction move(e) {\n  newBoard = board;\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      slideLeft();\n      break;\n\n    case 'ArrowRight':\n      slideRight();\n      break;\n\n    case 'ArrowDown':\n      slideDown();\n      break;\n\n    case 'ArrowUp':\n      slideUp();\n      break;\n\n    default:\n      return;\n  }\n\n  for (let row = 0; row < size; row++) {\n    for (let col = 0; col < size; col++) {\n      if (newBoard[row][col] !== board[row][col]) {\n        board = newBoard;\n        addNumber();\n        render();\n      }\n    }\n  }\n\n  if (isWin) {\n    messageWin.classList.remove('hidden');\n  }\n\n  if (!isPosibleToMove()) {\n    messageLose.classList.remove('hidden');\n    document.removeEventListener('keydown', move);\n  }\n}\n\nfunction restartGame() {\n  score = 0;\n\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  if (!messageLose.classList.contains('hidden')) {\n    messageLose.classList.add('hidden');\n  }\n\n  if (!messageWin.classList.contains('hidden')) {\n    messageWin.classList.add('hidden');\n  }\n};\n\nfunction addNumber() {\n  const [randomY, randomX] = findEmptyCell();\n\n  board[randomY][randomX] = Math.random() < 0.9 ? 2 : 4;\n};\n\nfunction findEmptyCell() {\n  const emptyCells = [];\n\n  board.forEach((row, rowIndex) => {\n    row.forEach((cell, columnIndex) => {\n      if (cell === 0) {\n        emptyCells.push([rowIndex, columnIndex]);\n      }\n    });\n  });\n\n  return emptyCells[Math.floor(Math.random() * emptyCells.length)];\n}\n\nfunction render() {\n  for (let row = 0; row < size; row++) {\n    for (let col = 0; col < size; col++) {\n      const elem = fieldRows[row].children[col];\n      const cell = board[row][col];\n\n      if (cell === 0) {\n        elem.textContent = '';\n        elem.className = 'field-cell';\n      } else {\n        elem.textContent = cell;\n        elem.className = `field-cell field-cell--${cell}`;\n      }\n    };\n  };\n\n  gameScore.textContent = score;\n};\n\nfunction slideLeft() {\n  if (!checkRows()) {\n    return;\n  }\n\n  newBoard = newBoard.map(row => {\n    const newRow = row.filter(cell => cell !== 0);\n\n    newRow.forEach((cell, index) => {\n      if (cell === newRow[index + 1]) {\n        newRow[index] *= 2;\n        newRow.splice(index + 1, 1);\n        score += newRow[index];\n\n        if (newRow[index] === 2048) {\n          isWin = true;\n        }\n      }\n    });\n\n    return newRow.concat(Array(size - newRow.length).fill(0));\n  });\n}\n\nfunction slideRight() {\n  if (!checkRows()) {\n    return;\n  }\n\n  reverseRows();\n  slideLeft();\n  reverseRows();\n}\n\nfunction reverseRows() {\n  newBoard.forEach(row => row.reverse());\n}\n\nfunction slideDown() {\n  transposeGameField();\n  slideRight();\n  transposeGameField();\n}\n\nfunction slideUp() {\n  transposeGameField();\n  slideLeft();\n  transposeGameField();\n}\n\nfunction transposeGameField() {\n  newBoard = newBoard[0]\n    .map((_, colIndex) => newBoard.map(row => row[colIndex]));\n}\n\nfunction isPosibleToMove() {\n  if (checkRows()) {\n    return true;\n  }\n\n  transposeGameField();\n\n  return checkColumns();\n}\n\nfunction checkRows() {\n  for (let i = 0; i < size; i++) {\n    if (newBoard[i].some(cell => cell === 0)\n      || newBoard[i].some((cell, j) => cell === newBoard[i][j + 1])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction checkColumns() {\n  for (let i = 0; i < size; i++) {\n    if (newBoard[i].some((cell, j) => cell === newBoard[i][j + 1])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}